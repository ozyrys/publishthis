<?php

/**
 * Implements hook_install().
 */
function ofed_page_install() {
  // Include ds settings.
  $file = drupal_get_path('module', 'ofed_page') . '/install/_ofed_page.ds.inc';
  if (file_exists($file)) {
    // Include it.
    include_once 'install/_ofed_page.ds.inc';

    // Install ds customs fields.
    if (function_exists('ofed_page_ds_custom_fields_info')) {
      $fields = ofed_page_ds_custom_fields_info();
      foreach ($fields as $id => $field) {
        // Remove one key.
        if (isset($field->api_version)) {
          unset($field->api_version);
        }
        // Serialize the entities.
        $field->entities = serialize($field->entities);
        // Serialize the ui_limit.
        $field->ui_limit = serialize($field->ui_limit);
        // Serialize the properties.
        $field->properties = serialize($field->properties);

        // Cast variable like an array.
        $field = (array) $field;

        // Save in database.
        db_insert('ds_fields')->fields($field)->execute();
      }
    }

    // Install ds fields settings.
    if (function_exists('ofed_page_ds_field_settings_info')) {
      $fields = ofed_page_ds_field_settings_info();
      foreach ($fields as $id => $field) {
        // Remove one key.
        if (isset($field->api_version)) {
          unset($field->api_version);
        }
        // Serialize the settings.
        $field->settings = serialize($field->settings);

        // Cast variable like an array.
        $field = (array) $field;

        // Save in database.
        db_insert('ds_field_settings')->fields($field)->execute();
      }
    }

    // Install ds layouts settings.
    if (function_exists('ofed_page_ds_layout_settings_info')) {
      $layouts = ofed_page_ds_layout_settings_info();
      foreach ($layouts as $id => $layout) {
        // Remove one key.
        if (isset($layout->api_version)) {
          unset($layout->api_version);
        }
        // Serialize the settings.
        $layout->settings = serialize($layout->settings);

        // Cast variable like an array.
        $layout = (array) $layout;

        // Save in database.
        db_insert('ds_layout_settings')->fields($layout)->execute();
      }
    }
  }
}

/**
 * Disable unused view modes.
 */
function ofed_page_update_7101() {
  $module = db_select('system', 's')
    ->fields('s')
    ->condition('name', 'ofed_feature_page')
    ->execute()
    ->fetchObject();

  if (!empty($module) && $module->schema_version < 7101) {
    // Set the bundle name.
    $bundle = 'ofed_page';
    // Set what display will be removed.
    $displays_to_delete = array('search_index', 'block_info');

    // Delete display suite layout settings.
    foreach ($displays_to_delete as $display_to_delete) {
      db_delete('ds_layout_settings')->condition('id', 'node|' . $bundle . '|' . $display_to_delete)->execute();
    }
    // Delete display suite field settings.
    foreach ($displays_to_delete as $display_to_delete) {
      db_delete('ds_field_settings')->condition('id', 'node|' . $bundle . '|' . $display_to_delete)->execute();
    }

    // Update field instance.
    // Get field config instance for each field used by the content type.
    // Select each field instance for this bundle.
    $fields = db_select('field_config_instance', 'fci')->fields('fci')->condition('bundle', $bundle)->execute()->fetchAll();
    foreach ($fields as $field) {
      // Get data.
      $data = unserialize($field->data);
      // Remove displays.
      foreach ($displays_to_delete as $display_to_delete) {
        if (isset($data['display'][$display_to_delete])) {
          unset($data['display'][$display_to_delete]);
        }
      }
      // Set data.
      $field->data = serialize($data);
      // Update record.
      db_update('field_config_instance')->fields(array('data' => $field->data))->condition('id', $field->id)->execute();
    }

    // Update bundle settings variable.
    // Get variable content.
    $bundle_settings_node = variable_get('field_bundle_settings_node__' . $bundle, array());
    if (!empty($bundle_settings_node)) {
      // Disable displays.
      foreach ($displays_to_delete as $display_to_delete) {
        if (isset($bundle_settings_node['view_modes'][$display_to_delete])) {
          if ($display_to_delete == 'block_info') {
            unset($bundle_settings_node['view_modes'][$display_to_delete]);
            if (isset($bundle_settings_node['extra_fields']['display']['language'][$display_to_delete])) {
              unset($bundle_settings_node['extra_fields']['display']['language'][$display_to_delete]);
            }
          }
          else {
            $bundle_settings_node['view_modes'][$display_to_delete] = array('custom_settings' => FALSE);
          }
        }
      }
      // Set variable content.
      variable_set('field_bundle_settings_node__' . $bundle, $bundle_settings_node);
    }
  }
}
